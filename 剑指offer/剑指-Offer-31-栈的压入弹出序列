class Solution {
    
    LinkedList<Integer> AuxStack = new LinkedList<Integer>();
    LinkedList<Integer> Stack = new LinkedList<Integer>();
    public boolean validateStackSequences(int[] pushed, int[] popped) 
    {
        boolean judge = true;
        int a = 0;
        int b = 0;
        int lengthpush = pushed.length;
        int lengthpop = popped.length;
        while(b<lengthpop)
        {
            if(AuxStack.isEmpty())
            {
                AuxStack.push(pushed[a]);
                a++;
                continue;
            }
            
            int i1 = AuxStack.pop();
            if(i1!=popped[b])
            {
                AuxStack.push(i1);
                if(a>=lengthpush)
                break;
                AuxStack.push(pushed[a]);
                a++;
                continue;
            }
            else
            {
                b++;
                continue;
            }
        }
        if(a==lengthpush&&b==lengthpop)
        return true;
        else
        return false;
    }
}
