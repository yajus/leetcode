/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder==null||preorder.length==0||inorder==null||inorder.length==0)
        return null;
        return buildCore(preorder,inorder,0,preorder.length-1,0,inorder.length-1);
    }
    TreeNode buildCore(int[] preorder,int[] inorder,int pStart,int pEnd,int iStart,int iEnd)
    {
        TreeNode root = new TreeNode(preorder[pStart]);
        if(pStart==pEnd&&iStart==iEnd&&preorder[pStart]==inorder[iStart])
        {return root;}
        else
        {
            //
        }     
        int count = 0;
        int mid = iStart;
        while(inorder[mid++]!=preorder[pStart])
        {
            count++;
        }   
        if(count>0)
        {
        root.left = buildCore(preorder,inorder,pStart+1,pStart+count,iStart,iStart+count-1);
        }
        if(pEnd>(pStart+count))
        {
        root.right = buildCore(preorder,inorder,pStart+count+1,pEnd,iStart+count+1,iEnd);
        }
        return root;
    }
}
