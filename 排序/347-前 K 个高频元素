class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer,Integer> Times=new HashMap<Integer,Integer>();
        //数字：次数
        for (int num:nums)
        {
            Times.put(num,Times.getOrDefault(num,0)+1);
        }
        ArrayList<Integer>[] Bucket = new ArrayList[nums.length+1]; 
        for(Integer key:Times.keySet())
        {
            int Frequent = Times.get(key);
            if(Bucket[Frequent]==null)
            {
                Bucket[Frequent]=new ArrayList<Integer>();
            }
            Bucket[Frequent].add(key);
        }
        ArrayList<Integer> TopK = new ArrayList<Integer>();
        for(int i=Bucket.length-1;i>=0&&TopK.size()<k;i--)
        {
            if(Bucket[i]==null)
            {
                continue;
            }
            if(Bucket[i].size()<=k-TopK.size())
            {
                TopK.addAll(Bucket[i]);
            }
            else
            {
                TopK.addAll(Bucket[i].subList(0,k-TopK.size()));
            }
        }

        int[] result = new int[k];
        for(int i =0;i<k;i++)
        {
            result[i]=TopK.get(i);
        }
        return result;

    }
}

